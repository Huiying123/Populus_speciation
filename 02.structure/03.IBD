###perl script split vcf 
#! /usr/bin/env perl
use strict;
use warnings;

my $vcf="../SNPs_filtered.lowdepth.missing.dup.recode.vcf";
my $outdir="vcf";
`mkdir $outdir` if(!-e $outdir);

open I,"cat $vcf |";
my $prefix;
while(<I>){
    if(/^##/){
        $prefix.=$_;
        next;
    }
    if(/^#/){
        $prefix.=$_;
        last;
    }
}

my $chr_pre="NA";
while(<I>){
    chomp;
    my @a=split(/\s+/);
    my $chr=$a[0];
    next if($chr=~/scaffold/);
    if($chr ne $chr_pre){
        close O;
        open O,"| gzip - > $outdir/$chr.vcf.gz";
        print O "$prefix";
    }
    print O "$_\n";
    $chr_pre=$chr;
}
close O;
close I;

#run IBD
java -jar /home/uni/programme/beagle/beagle.27Jul16.86a.jar gt=/media/uni/data/projects/population_data/18.new_vcf/05.IBD/vcf/chr1.vcf

###perl script
#! /usr/bin/env perl
use strict;
use warnings;

my ($ibd,$hbd)=@ARGV;
die "Usage: $0 <ibd output> <hbd output>\n" if(@ARGV<2);

my %result;
open I,"< $ibd" or die "Cannot open $ibd!\n";
while(<I>){
    chomp;
    my @a=split(/\s+/);
    my ($id1,$id1_idx,$id2,$id2_idx,$chr,$start,$end,$lod)=@a;
    my $len=$end-$start+1;
    $result{$id1}{$id2}+=$len;
    $result{$id2}{$id1}+=$len;
}
close I;

open I,"< $hbd" or die "Cannot open $hbd!\n";
while(<I>){
    chomp;
    my @a=split(/\s+/);
    my ($id1,$id1_idx,$id2,$id2_idx,$chr,$start,$end,$lod)=@a;
    my $len=$end-$start+1;
    $result{$id1}{$id2}+=$len;
}
close I;

my @id=sort keys %result;
open O,"> $0.txt";
print O "\t",join "\t",@id,"\n";
foreach my $id1(@id){
    my @line=($id1);
    foreach my $id2(@id){
        my $value=0;
        if(exists $result{$id1}{$id2}){
            $value = $result{$id1}{$id2};
        }
        push @line,$value;
    }
    print O join "\t",@line,"\n";
}
close O;

###draw IBD

library('pheatmap')
library(RColorBrewer)
a=read.table('06.ibd_sta.pl.new3.txt',header=T)
b=log(a+1)
pdf(file='IBD.trim100.new.pdf')                                       
pheatmap(b,border_color=NA,cluster_rows=F,cluster_cols=F, fontsize=4, color=colorRampPalette(rev(brewer.pal(n = 11, name ="RdBu")))(10
dev.off()    

